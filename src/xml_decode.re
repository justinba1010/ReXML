type substr_t =
  | Substring(string)
  | EOF;
let __ocaml_lex_tables = {
  Lexing.lex_base: "\000\000ÿ\000\000\001\000\000\000\000\000\000\000\002\000\000\000þÿ\001\000ýÿ\000\000\002\000\002\000üÿ\000\000\003\000úÿ\b\000\004\000\004\000ûÿ",
  Lexing.lex_backtrk: "ÿÿÿÿÿÿ\000\000ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ",
  Lexing.lex_default: "\003\000\000\000ÿÿ\003\000ÿÿÿÿÿÿÿÿÿÿ\000\000ÿÿ\000\000ÿÿÿÿÿÿ\000\000ÿÿÿÿ\000\000ÿÿÿÿÿÿ\000\000",
  Lexing.lex_trans: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000ÿÿ\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\011\000\015\000\018\000\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\007\000\r\000\000\000\016\000\012\000\004\000\014\000\017\000\n\000\019\000\bÿÿ\000\000\000\000\000\000\000\000\000\000\000\000\000\000",
  Lexing.lex_check: "ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\000\000\003\000ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\b\000\n\000\014\000\017\000\021\000ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\002\000ÿÿÿÿÿÿÿÿÿÿ\002\000ÿÿÿÿÿÿÿÿ\002\000\005\000ÿÿ\012\000\005\000\002\000\r\000\016\000\006\000\004\000\007\000\019\000\020\000ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\000\000\003\000ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ",
  Lexing.lex_base_code: "",
  Lexing.lex_backtrk_code: "",
  Lexing.lex_default_code: "",
  Lexing.lex_trans_code: "",
  Lexing.lex_check_code: "",
  Lexing.lex_code: "",
};

let rec token = lexbuf => __ocaml_lex_token_rec(lexbuf, 0)
and __ocaml_lex_token_rec = (lexbuf, __ocaml_lex_state) =>
  switch (Lexing.engine(__ocaml_lex_tables, __ocaml_lex_state, lexbuf)) {

  | 0 => Substring(Lexing.lexeme(lexbuf))

  | 1 => Substring("<")

  | 2 => Substring(">")

  | 3 => Substring("&")

  | 4 => Substring("\"")

  | 5 => Substring("'")

  | 6 => EOF

  | __ocaml_lex_state =>
    lexbuf.Lexing.refill_buff(lexbuf);
    __ocaml_lex_token_rec(lexbuf, __ocaml_lex_state);
  };
let decode = text => {
  let lexbuf = Lexing.from_string(text);
  let rec aux_exec = acc =>
    switch (token(lexbuf)) {
    | Substring(substr) => aux_exec([substr, ...acc])
    | EOF => String.concat("", List.rev(acc))
    };

  aux_exec([]);
};
